gGit 命令
1.pwd  显示当前文件夹目录
2.git init  在这个文件夹里创建git 仓库
3.git add lg.txt 把这个文件加到缓存区。
4.git commit -m "message" 把缓存区中的文件提交到仓库。
5.git status 查看工作区当前状态。
6.git diff 查看库中的文件与工作区的不同。
7.git log 查看更新日志。
8.git log --pretty=oneline 精简版更新日志。
9.git reset --hard HEAD^ 回到上一个仓库版本。
10.git reset --hard HEAD~5 回到往上第五个版本。
11.git reset --hard 171207 去到指定版本号版本。
12.git reflog 查看当前分支指针移动的记录。
13.git checkout -- lg.txt 撤销指定文件在工作区中的修改，使它和最近的缓存区或仓库的版本一致。
14.git reset HEAD lg.txt 在缓存区中清除指定文件。防止其提交。
15.rm test.txt 在工作区中删除某个文件
16.git rm test.txt 在工作区中删除某个文件，并把删除修改移动到缓存区中。或把工作区的删除修改添加到缓存区中，以提交仓库。
17.git checkout -- test.txt 用版本仓库中的版本替换工作区的版本。如果是误删，可用此方法恢复一定损失，但是用之前先把缓存区的删除修改撤销回工作区。因为git checkout -- test.txt是把最近的add或者commitd的版本替换工作区的版本。
18.ssh-keygen -t rsa -C "1589075757@qq.com" 在某设备上创建密钥。
19.git remote add origin git@github.com:liu-delong/learninggit.git 关联远程仓库。
20.git remote rm origin 取消关联远程仓库。
21.git push -u origin master  把master分支的内容推送到远程，并把远程的master和本地的master关联起来。
22.git push origin master 把master分支推送到远程。
22.git clone git@github.com:liu-delong/gitskills.git 克隆远程仓库到所在文件夹（会在所在文件夹中新建一个git管理的文件夹(库中库)）
23.git checkout -b dev 创建并移动到dev分支。
24.git branch dev 创建dev 分支。
25.git checkout dev 移动到dev分支。
26.git branch 查看当前分支。

